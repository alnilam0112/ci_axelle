name: Deploy via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ R√©cup√©ration du code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Installer PHP et extensions
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo, xml, curl, zip

      # 3Ô∏è‚É£ Installer les d√©pendances PHP via Composer
      - name: Install PHP dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

      # 4Ô∏è‚É£ Corriger les permissions sur les outils
      - name: Fix permissions
        run: |
          chmod +x ./vendor/bin/phpunit
          chmod +x ./vendor/bin/phpstan
          chmod +x ./vendor/bin/php-cs-fixer

      # 5Ô∏è‚É£ Lancer les tests unitaires avec PHPUnit
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit

      # 6Ô∏è‚É£ Analyse statique avec PHPStan
      - name: Run PHPStan analysis
        run: vendor/bin/phpstan analyse

      # 7Ô∏è‚É£ V√©rifier le style de code avec PHP CS Fixer
      - name: Run PHP CS Fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --diff --allow-risky=yes

      # 8Ô∏è‚É£ Installer les d√©pendances Node.js si pr√©sentes
      - name: Install Node.js dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # 9Ô∏è‚É£ Lancer les tests et lint JS
      - name: Run JS tests & lint
        run: |
          npm test
          npm run lint

      # üîπ V√©rifier les fichiers critiques
      - name: Check critical files
        run: |
          if [ ! -f ./config/.env ]; then
            echo "‚ùå Fichier .env manquant, arr√™t du d√©ploiement"
            exit 1
          fi

      # üîπ V√©rifier la branche
      - name: Ensure branch is main
        run:

